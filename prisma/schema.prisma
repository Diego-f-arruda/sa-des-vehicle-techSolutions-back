generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id
  name      String
  email     String   @unique
  password  String
  createdAt DateTime
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Produto {
  id         String        @id
  nome       String
  tipo       TipoAcessorio
  quantidade Int
  createdAt  DateTime
  updatedAt  DateTime      @updatedAt

  utilizados ProdutoUsado[]

  @@map("produto")
}

model Veiculo {
  id            String        @id
  modelo        String
  fabricante    String
  placa         String        @unique
  anoFabricacao Int
  createdAt     DateTime
  updatedAt     DateTime      @updatedAt
  status        VeiculoStatus @default(NOVO)

  manutencoes     Manutencao[]
  qualidades      Qualidade[]
  ordensDeServico OrdemDeServico[]

  @@map("veiculos")
}

model Qualidade {
  id                String   @id
  veiculoId         String
  aprovado          Boolean
  observacoes       String?
  motor             Boolean
  pintura           Boolean
  acabamentoInterno Boolean
  fluidos           Boolean
  opcionais         Boolean
  numberOS          Int      @unique
  createdAt         DateTime
  updatedAt         DateTime @updatedAt

  veiculo          Veiculo         @relation(fields: [veiculoId], references: [id])
  ordemDeServico   OrdemDeServico?
  ordemDeServicoId String?         @unique

  @@map("qualidade")
}

model OrdemDeServico {
  id             String    @id
  numberOS       String    @unique
  veiculoId      String
  qualidadeId    String    @unique
  dataAbertura   DateTime  @default(now())
  dataFechamento DateTime?

  createdAt DateTime
  updatedAt DateTime @updatedAt

  veiculo    Veiculo     @relation(fields: [veiculoId], references: [id])
  qualidade  Qualidade   @relation(fields: [qualidadeId], references: [id])
  manutencao Manutencao?

  @@map("ordens_de_servico")
}

model Manutencao {
  id               String           @id
  ordemDeServicoId String           @unique
  dataServico      DateTime
  observacoes      String?
  status           StatusManutencao
  createdAt        DateTime
  updatedAt        DateTime         @updatedAt
  qualidadeId      String?          @unique

  ordemDeServico OrdemDeServico @relation(fields: [ordemDeServicoId], references: [id])
  produtosUsados ProdutoUsado[]
  Veiculo        Veiculo       @relation(fields: [veiculoId], references: [id])
  veiculoId      String

  @@map("manutencao")
}

model ProdutoUsado {
  id           String   @id
  manutencaoId String
  produtoId    String
  quantidade   Int
  createdAt    DateTime
  updatedAt    DateTime @updatedAt

  manutencao Manutencao @relation(fields: [manutencaoId], references: [id])
  produto    Produto    @relation(fields: [produtoId], references: [id])

  @@map("produtosUsados")
}

enum TipoAcessorio {
  PECA
  ELETRONICO
  ACABAMENTO
}

enum StatusManutencao {
  pendente
  finalizado
}

enum VeiculoStatus {
  NOVO
  EM_QUALIDADE
  APROVADO
  REPROVADO
  EM_MANUTENCAO
}
